* General Setup
** Load-paths
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
(add-to-list 'load-path "~/.config/emacs/site-lisp")
#+end_src
** Backups
By default, Emacs creates automatic backups of files in their original directories. Instead, emacs should save in specific backup directory.
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
  (setq backup-directory-alist '((".*" . "~/.local/share/emacs/backups")))
#+end_src
** integration of wl-copy
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
(when (getenv "WAYLAND_DISPLAY")
(setq wl-copy-process nil)
  (defun wl-copy (text)
    (setq wl-copy-process (make-process :name "wl-copy"
                                        :buffer nil
                                        :command '("wl-copy" "-f" "-n")
                                        :connection-type 'pipe
                                        :noquery t))
    (process-send-string wl-copy-process text)
    (process-send-eof wl-copy-process))
(defun wl-paste ()
    (if (and wl-copy-process (process-live-p wl-copy-process))
        nil ; should return nil if we're the current paste owner
        (shell-command-to-string "wl-paste -n | tr -d \r")))
(setq interprogram-cut-function 'wl-copy)
(setq interprogram-paste-function 'wl-paste))
#+end_src

** Autoclose brackets
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
  (electric-pair-mode 1)
#+end_src

** UI

*** Startup screen
- disable emacs welcome screen
  #+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
    (setq inhibit-startup-screen t)
  #+end_src

*** Toolbar, Menubar, Scrollbar
- Disable the toolbar
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
  (tool-bar-mode -1)	          ;; Disable the toolbar
#+end_src

-Disable the menubar
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
  (menu-bar-mode -1)            ;; Disable the menu bar
#+end_src

- Disable the scrollbar
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
;;  (scroll-bar-mode -1)          ;; Disable visible scrollbar
#+end_src

*** Fonts
 #+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
   (set-face-attribute 'default nil :font "DejaVu Sans Mono" :height 180)
#+end_src
 
- mono font for console and programming
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
  (set-face-attribute 'fixed-pitch nil :font "DejaVu Sans Mono" :height 180)
#+end_src

- variable font for e.g. org-mode
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
  (set-face-attribute 'variable-pitch nil :font "DejaVu Sans" :height 180)
#+end_src

*** Basic keymaps
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
(global-set-key (kbd "C-x C-g") 'rgrep)
#+end_src

*** Zoom in and out
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
  (global-set-key (kbd "C-+") 'text-scale-increase)
  (global-set-key (kbd "C--") 'text-scale-decrease)
  (global-set-key (kbd "<C-wheel-up>") 'text-scale-increase)
  (global-set-key (kbd "<C-wheel-down>") 'text-scale-decrease)

#+end_src
*** Catppuccin-Theme
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
  (require 'spacemacs-theme)
(load-theme 'spacemacs-dark :no-confirm)
#+end_src
** Basic Settings
Remember recently edited files. Can then be shown with recentf-open-files
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el 
(recentf-mode 1)
#+end_src
Save what you enter into minibuffer prompts
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
(setq history-length 25)
(savehist-mode 1)
#+end_src
Remember and restore the last cursor location of opened files
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
(save-place-mode 1)
#+end_src
** Desktop package to save last session
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
    (require 'desktop)
  (desktop-save-mode 1)
  ;; don't save the following buffers
     (add-to-list 'desktop-modes-not-to-save 'dired-mode)
     (add-to-list 'desktop-modes-not-to-save 'Info-mode)
     (add-to-list 'desktop-modes-not-to-save 'info-lookup-mode)
     (add-to-list 'desktop-modes-not-to-save 'fundamental-mode)
     ;; specify dir to save session
     desktop-dirname "~/.local/share/emacs/emacs_session_backup"
     desktop-base-file-name "desktop"
     desktop-base-lock-name "desktop.lock"

#+end_src

** Whichkey
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
    (require 'which-key)
  (which-key-mode 1)
     (setq which-key-idle-delay 0.3)
    (setq which-key-allow-evil-operators t)
#+end_src

* Org mode
*** Helper functions
Set options for every Orgfile. Like
- automatic indentation
- set variable font size for better readable text
- automatically perform line wrap
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
    (defun my/org-mode-setup()
      ;; active automatic indentation
      (org-indent-mode)
      ;; proportially resize font
      (variable-pitch-mode 1)
      ;; automatically perform line wrap
      (visual-line-mode 1)
      )
#+end_src

** Activate org mode
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
  (require 'org)
(add-hook 'org-mode 'my/org-mode-setup)
   ;; replace "..." at the end of collapsed headlines
    (setq org-ellipsis " ▾"
          ;; remove special characters used for bold, kursiv etc.
          org-hide-emphasis-markers t)

    (setq org-agenda-start-with-log-mode t)
    (setq org-log-done 'time)
    (setq org-log-into-drawer t)
    ;; RETURN will follow links in org-mode files
    (setq org-return-follows-link  t)  
    ;; (setq org-agenda-files
    ;; 	'("/mnt/nvme2/orgmode/")
    ;; 	)
    (font-lock-add-keywords 'org-mode
                            '(("^ *\\([-]\\) "
                               (0 (prog1 () (compose-region (match-beginning 1) (match-end 1) "•"))))))

    ;;Set faces for heading levels.
    (dolist (face '((org-level-1 . 1.2)
                    (org-level-2 . 1.1)
                    (org-level-3 . 1.05)
                    (org-level-4 . 1.0)
                    (org-level-5 . 1.1)
                    (org-level-6 . 1.1)
                    (org-level-7 . 1.1)
                    (org-level-8 . 1.1)))
      (set-face-attribute (car face) nil :font "DejaVu Sans" :weight 'regular :height (cdr face)))
  ;; Ensure that anything that should be fixed-pitch in Org files appears that way
  (set-face-attribute 'org-block nil :foreground nil :inherit 'fixed-pitch)
  (set-face-attribute 'org-code nil :inherit '(shadow fixed-pitch))
  (set-face-attribute 'org-table nil :inherit '(shadow fixed-pitch))
  (set-face-attribute 'org-verbatim nil :inherit '(shadow fixed-pitch))
  (set-face-attribute 'org-special-keyword nil :inherit '(font-lock-comment-face fixed-pitch))
  (set-face-attribute 'org-meta-line nil :inherit '(font-lock-comment-face fixed-pitch))
  (set-face-attribute 'org-checkbox nil :inherit 'fixed-pitch)
    ;;:bind (;;copy link anker to clipboard, insert with C-c C-l
      ;;     ("C-c l" . org-stored-links))
#+end_src

** Org Agenda
Define folder for org agenda files.
#+begin_src emacs-lisp :tangle ~/.config/emacs/config.el
(require 'org-agenda)
    (setq org-agenda-files (directory-files-recursively "/mnt/d/WSL/orgmode" "\\.org$"))

#+end_src
